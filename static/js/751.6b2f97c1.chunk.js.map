{"version":3,"file":"static/js/751.6b2f97c1.chunk.js","mappings":"2UAkBaA,EAAe,WAK1B,IAAMC,GAAWC,EAAAA,EAAAA,MAmCXC,GAAeC,EAAAA,EAAAA,KACrB,OACEC,EAAAA,EAAAA,KAACC,EAAAA,EAAa,CAACC,MAAOJ,EAAaK,UACjCC,EAAAA,EAAAA,MAACC,EAAAA,GAAI,CACHC,WAAS,EACTC,UAAU,OACVC,WAAW,SACXC,eAAe,SACfC,GAAI,CAAEC,OAAQ,QAASR,SAAA,EAEvBH,EAAAA,EAAAA,KAACY,EAAAA,GAAW,KACZZ,EAAAA,EAAAA,KAACK,EAAAA,GAAI,CACHQ,MAAI,EACJC,IAAI,KAeNd,EAAAA,EAAAA,KAACK,EAAAA,GAAI,CAACQ,MAAI,EAACC,GAAI,GAAIC,GAAI,EAAGC,GAAI,EAAGT,UAAWU,EAAAA,EAAOC,UAAW,EAAGC,QAAM,EAAAhB,UACrEC,EAAAA,EAAAA,MAACgB,EAAAA,EAAG,CACFV,GAAI,CACFW,GAAI,EACJC,GAAI,EACJC,QAAS,OACTC,cAAe,SACfhB,WAAY,UACZL,SAAA,EAEFH,EAAAA,EAAAA,KAACyB,EAAAA,EAAM,CAACf,GAAI,CAAEgB,EAAG,EAAGC,QAAS,WAAYxB,UACvCH,EAAAA,EAAAA,KAAC4B,EAAAA,EAAgB,OAEnB5B,EAAAA,EAAAA,KAAC6B,EAAAA,EAAU,CAACtB,UAAU,KAAKuB,QAAQ,KAAI3B,SAAC,cAGxCC,EAAAA,EAAAA,MAACgB,EAAAA,EAAG,CACFb,UAAU,OACVwB,YAAU,EACVC,SAhES,SAAAC,GACnBA,EAAEC,iBACF,IAAMC,EAAOF,EAAEG,cACfxC,GACEyC,EAAAA,EAAAA,IAAS,CACPC,KAAMH,EAAKI,SAASD,KAAKE,MACzBC,MAAON,EAAKI,SAASE,MAAMD,MAC3BE,SAAUP,EAAKI,SAASG,SAASF,SAGlCG,SACAC,MAAK,SAAAC,GACJC,EAAAA,GAAAA,QAAc,aAADC,OAAcF,EAASG,KAAKV,KAAI,MAC7CH,EAAKc,OACP,IACCC,OAAM,kBAAMJ,EAAAA,GAAAA,MAAY,yCAAyC,GACtE,EAiDYpC,GAAI,CAAEyC,GAAI,GAAIhD,SAAA,EAEdH,EAAAA,EAAAA,KAACoD,EAAAA,EAAS,CACRC,OAAO,SACPC,UAAQ,EACRC,WAAS,EACTC,GAAG,OACHC,MAAM,OACNnB,KAAK,OACLoB,aAAa,MACbC,WAAS,KAEX3D,EAAAA,EAAAA,KAACoD,EAAAA,EAAS,CACRC,OAAO,SACPC,UAAQ,EACRC,WAAS,EACTC,GAAG,QACHC,MAAM,gBACNnB,KAAK,QACLoB,aAAa,SAEf1D,EAAAA,EAAAA,KAACoD,EAAAA,EAAS,CACRC,OAAO,SACPC,UAAQ,EACRC,WAAS,EACTjB,KAAK,WACLmB,MAAM,WACNG,KAAK,WACLJ,GAAG,WACHE,aAAa,SAGf1D,EAAAA,EAAAA,KAAC6D,EAAAA,EAAM,CACLD,KAAK,SACLL,WAAS,EACTzB,QAAQ,YACRpB,GAAI,CAAEyC,GAAI,EAAGW,GAAI,GAAI3D,SACtB,yBAqCf,EClLe,SAAS4D,IACtB,OACE/D,EAAAA,EAAAA,KAAA,OAAAG,UAEEH,EAAAA,EAAAA,KAACL,EAAY,KAGnB,C","sources":["components/RegisterForm/RegisterForm.jsx","pages/RegisterPage.jsx"],"sourcesContent":["import { useDispatch } from 'react-redux';\nimport { register } from 'redux/auth-operation';\n// import css from './RegisterForm.module.css';\n// import { useState } from 'react';\nimport { toast } from 'react-toastify';\n\nimport Avatar from '@mui/material/Avatar';\nimport Button from '@mui/material/Button';\nimport CssBaseline from '@mui/material/CssBaseline';\nimport TextField from '@mui/material/TextField';\n// import Link from '@mui/material/Link';\nimport Paper from '@mui/material/Paper';\nimport Box from '@mui/material/Box';\nimport Grid from '@mui/material/Grid';\nimport LockOutlinedIcon from '@mui/icons-material/LockOutlined';\nimport Typography from '@mui/material/Typography';\nimport { createTheme, ThemeProvider } from '@mui/material/styles';\n\nexport const RegisterForm = () => {\n  // const [name, setName] = useState('');\n  // const [email, setEmail] = useState('');\n  // const [password, setPassword] = useState('');\n\n  const dispatch = useDispatch();\n  // const handleChange = ({ target: { value, name } }) => {\n  //   switch (name) {\n  //     case 'name':\n  //       setName(value);\n  //       break;\n\n  //     case 'email':\n  //       setEmail(value);\n  //       break;\n  //     case 'password':\n  //       setPassword(value);\n  //       break;\n  //     default:\n  //       return;\n  //   }\n  // };\n\n  const handleSubmit = e => {\n    e.preventDefault();\n    const form = e.currentTarget;\n    dispatch(\n      register({\n        name: form.elements.name.value,\n        email: form.elements.email.value,\n        password: form.elements.password.value,\n      })\n    )\n      .unwrap()\n      .then(response => {\n        toast.success(`Wellcome, ${response.user.name}!`);\n        form.reset();\n      })\n      .catch(() => toast.error('Login error - wrong email or password.'));\n  };\n  const defaultTheme = createTheme();\n  return (\n    <ThemeProvider theme={defaultTheme}>\n      <Grid\n        container\n        component=\"main\"\n        alignItems=\"center\"\n        justifyContent=\"center\"\n        sx={{ height: '50vh' }}\n      >\n        <CssBaseline />\n        <Grid\n          item\n          xs={false}\n          // sm={4}\n          // md={4}\n          // sx={{\n          //   backgroundImage:\n          //     'url(https://source.unsplash.com/random?wallpapers)',\n          //   backgroundRepeat: 'no-repeat',\n          //   backgroundColor: t =>\n          //     t.palette.mode === 'light'\n          //       ? t.palette.grey[50]\n          //       : t.palette.grey[900],\n          //   backgroundSize: 'cover',\n          //   backgroundPosition: 'center',\n          // }}\n        />\n        <Grid item xs={12} sm={8} md={5} component={Paper} elevation={6} square>\n          <Box\n            sx={{\n              my: 8,\n              mx: 4,\n              display: 'flex',\n              flexDirection: 'column',\n              alignItems: 'center',\n            }}\n          >\n            <Avatar sx={{ m: 1, bgcolor: '#9a2f9d' }}>\n              <LockOutlinedIcon />\n            </Avatar>\n            <Typography component=\"h1\" variant=\"h5\">\n              Register\n            </Typography>\n            <Box\n              component=\"form\"\n              noValidate\n              onSubmit={handleSubmit}\n              sx={{ mt: 1 }}\n            >\n              <TextField\n                margin=\"normal\"\n                required\n                fullWidth\n                id=\"name\"\n                label=\"Name\"\n                name=\"name\"\n                autoComplete=\"off\"\n                autoFocus\n              />\n              <TextField\n                margin=\"normal\"\n                required\n                fullWidth\n                id=\"email\"\n                label=\"Email Address\"\n                name=\"email\"\n                autoComplete=\"off\"\n              />\n              <TextField\n                margin=\"normal\"\n                required\n                fullWidth\n                name=\"password\"\n                label=\"Password\"\n                type=\"password\"\n                id=\"password\"\n                autoComplete=\"off\"\n              />\n\n              <Button\n                type=\"submit\"\n                fullWidth\n                variant=\"contained\"\n                sx={{ mt: 3, mb: 2 }}\n              >\n                Register\n              </Button>\n            </Box>\n          </Box>\n        </Grid>\n      </Grid>\n    </ThemeProvider>\n\n    // <form className={css.form} onSubmit={handleSubmit} autoComplete=\"off\">\n    //   <label className={css.label}>\n    //     Username\n    //     <input type=\"text\" name=\"name\" value={name} onChange={handleChange} />\n    //   </label>\n    //   <label className={css.label}>\n    //     Email\n    //     <input\n    //       type=\"email\"\n    //       name=\"email\"\n    //       value={email}\n    //       onChange={handleChange}\n    //     />\n    //   </label>\n    //   <label className={css.label}>\n    //     Password\n    //     <input\n    //       type=\"password\"\n    //       name=\"password\"\n    //       value={password}\n    //       onChange={handleChange}\n    //     />\n    //   </label>\n    //   <button type=\"submit\" disabled={!email || !password}>\n    //     Register\n    //   </button>\n    // </form>\n  );\n};\n","import { RegisterForm } from '../components/RegisterForm/RegisterForm';\n\nexport default function Register() {\n  return (\n    <div>\n      {/* <h2>SignUp</h2> */}\n      <RegisterForm />\n    </div>\n  );\n}\n"],"names":["RegisterForm","dispatch","useDispatch","defaultTheme","createTheme","_jsx","ThemeProvider","theme","children","_jsxs","Grid","container","component","alignItems","justifyContent","sx","height","CssBaseline","item","xs","sm","md","Paper","elevation","square","Box","my","mx","display","flexDirection","Avatar","m","bgcolor","LockOutlinedIcon","Typography","variant","noValidate","onSubmit","e","preventDefault","form","currentTarget","register","name","elements","value","email","password","unwrap","then","response","toast","concat","user","reset","catch","mt","TextField","margin","required","fullWidth","id","label","autoComplete","autoFocus","type","Button","mb","Register"],"sourceRoot":""}